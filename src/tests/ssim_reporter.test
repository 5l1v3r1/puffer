#!/usr/bin/python3

import os
from os import path
import re
from test_helpers import check_call, check_output

EXPECTED_SQL_RE_STR = (
    r'CREATE TABLE IF NOT EXISTS \w+ \('
    r'timestamp varchar\(20\) NOT NULL,'
    r'resolution varchar\(20\) NOT NULL,'
    r'crf integer NOT NULL,'
    r'ssim decimal NOT NULL,'
    r'created_at timestamp NOT NULL\);'
    r'INSERT INTO \w+ \(timestamp,resolution,crf,ssim,created_at\) '
    r"VALUES \('\d+','\d+x\d+',\d+,[\d.]+,to_timestamp\(\d+\)\);")
print (EXPECTED_SQL_RE_STR)
EXPECTED_SQL_RE = re.compile(EXPECTED_SQL_RE_STR)


# b"CREATE TABLE IF NOT EXISTS mocktable (timestamp varchar(20) NOT
# NULL,resolution varchar(20) NOT NULL,crf integer NOT NULL,ssim decimal NOT
# NULL,created_at timestamp NOT NULL);INSERT INTO mocktable
# (timestamp,resolution,crf,ssim,created_at) VALUES
# ('180000','1920x1080',32,26.3166,to_timestamp(1520285883));\n"

def main():
    abs_builddir = os.environ['abs_builddir']
    test_tmpdir = path.join(abs_builddir, 'test_tmpdir')

    ssim_reporter_testdir = path.join(test_tmpdir, 'ssim_reporter_testdir')

    check_call(['rm', '-rf', ssim_reporter_testdir])
    check_call(['mkdir', '-p', ssim_reporter_testdir])

    test_file = path.join(ssim_reporter_testdir, '180000.ssim')
    with open(test_file, 'w') as fp:
        fp.write('26.3166')

    ssim_reporter = path.abspath(
        path.join(abs_builddir, os.pardir, 'monitoring', 'ssim_reporter'))

    # The postgres db does not exist, but the command should not fail.
    sql = check_output([ssim_reporter, test_file,
                       'postgresql://user@localhost/db', 'mocktable',
                       '1920x1080', '32'])
    sql = str(sql.strip())
    match = EXPECTED_SQL_RE.search(sql)
    if not match:
        print('SQL output did not match expected: Expected: "{}" Got: "{}"'.format(EXPECTED_SQL_RE_STR, sql))
        exit(1)


if __name__ == '__main__':
    main()
